@page "/queue-page"
@attribute [Authorize]
@inject NavigationManager NavigationManager
@using System.Security.Claims
@using Client.MyAccount

<MudGrid>
    <MudItem xs="12" Class="px-10 py-5">
        <MudCard Elevation="10" Class="mx-auto pa-10 px-3 mt-10 rounded-xl ">
            <MudGrid>

                <MudItem xs="12" Class="d-flex justify-center flex-grow-1 gap-4 " Style="position: relative;">

                    <MudOverlay Visible="true" Absolute="true">
                        <MudButton Variant="Variant.Filled" Color="Color.Secondary" Style="height:60px;width:120px;" OnClick="@SimulateProgress">JOIN QUEUE</MudButton>
                    </MudOverlay>

                    <MudProgressCircular Color="Color.Secondary" Value="@Value" Style="height:300px;width:300px;" />
                       
                    
                    
                </MudItem>

                <MudItem xs="12"> 
                    
                </MudItem>

            </MudGrid>
        </MudCard>
    </MudItem>
</MudGrid>

@code {

    [CascadingParameter]
    private Task<AuthenticationState>? AuthState { get; set; }

    public int Value { get; set; }

    public async void SimulateProgress()
    {
        Value = 0;
        do
        {
            if (_disposed)
            {
                return;
            }

            Value += 4;
            StateHasChanged();
            await Task.Delay(500);

        } while (Value < 100);

        SimulateProgress();
    }


    bool _disposed;
    public void Dispose() => _disposed = true;


    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState;


        if (!authState.User.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/");
        }

    }
}
